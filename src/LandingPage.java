
import java.awt.event.MouseAdapter;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import javafx.util.Pair;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

*/

/**
 *
 * @author yinuo
 */

public class LandingPage extends javax.swing.JFrame {
    
    protected MyHashTable hashTable;
    protected int bucketCount;

    /**
     * Creates new form LandingPage
     */
    public LandingPage() {
        bucketCount = 5;
        hashTable = new MyHashTable(5);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        employeeType = new javax.swing.ButtonGroup();
        InputErrorMsg = new javax.swing.JDialog();
        InputErrorMsgButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        title = new javax.swing.JLabel();
        searchEN = new javax.swing.JTextField();
        searchHeading = new javax.swing.JLabel();
        SearchButton = new javax.swing.JButton();
        addHeading = new javax.swing.JLabel();
        addFN = new java.awt.TextField();
        addLN = new java.awt.TextField();
        addEN = new java.awt.TextField();
        labelEN = new java.awt.Label();
        labelFN = new java.awt.Label();
        labelLN = new java.awt.Label();
        AddEmp = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        loadButton = new javax.swing.JButton();
        addWL = new java.awt.TextField();
        addSX = new java.awt.TextField();
        addDR = new java.awt.TextField();
        labelSX = new java.awt.Label();
        labelWL = new java.awt.Label();
        radioButtonPT = new javax.swing.JRadioButton();
        radioButtonFT = new javax.swing.JRadioButton();
        labelDR = new java.awt.Label();
        tableScrollPane = new javax.swing.JScrollPane();
        empTable = new javax.swing.JTable();
        displayHeading = new javax.swing.JLabel();
        refreshButton = new javax.swing.JButton();
        partTimeVSFullTime = new javax.swing.JTabbedPane();
        fillerTab = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        partTimeTab = new javax.swing.JPanel();
        labelHW = new java.awt.Label();
        addHW = new java.awt.TextField();
        labelHPW = new java.awt.Label();
        addHPW = new java.awt.TextField();
        labelWPY = new java.awt.Label();
        addWPY = new java.awt.TextField();
        fullTimeTab = new javax.swing.JPanel();
        labelYS = new java.awt.Label();
        addYS = new java.awt.TextField();

        InputErrorMsg.setMinimumSize(new java.awt.Dimension(272, 207));
        InputErrorMsg.setResizable(false);

        InputErrorMsgButton.setText("Got it");
        InputErrorMsgButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InputErrorMsgButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Error! You've done a funny :(");

        javax.swing.GroupLayout InputErrorMsgLayout = new javax.swing.GroupLayout(InputErrorMsg.getContentPane());
        InputErrorMsg.getContentPane().setLayout(InputErrorMsgLayout);
        InputErrorMsgLayout.setHorizontalGroup(
            InputErrorMsgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InputErrorMsgLayout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addGroup(InputErrorMsgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(InputErrorMsgLayout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(InputErrorMsgButton)))
                .addContainerGap(57, Short.MAX_VALUE))
        );
        InputErrorMsgLayout.setVerticalGroup(
            InputErrorMsgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InputErrorMsgLayout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addComponent(InputErrorMsgButton)
                .addGap(60, 60, 60))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        title.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title.setText("Employee Database");

        searchEN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchENActionPerformed(evt);
            }
        });

        searchHeading.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        searchHeading.setText("Search Employee By Number");

        SearchButton.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        SearchButton.setText("Search");
        SearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchButtonActionPerformed(evt);
            }
        });

        addHeading.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        addHeading.setText("Add Employee");

        addEN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addENActionPerformed(evt);
            }
        });

        labelEN.setText("Employee Number");

        labelFN.setText("First Name");

        labelLN.setText("Last Name");

        AddEmp.setText("Add");
        AddEmp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddEmpActionPerformed(evt);
            }
        });

        saveButton.setText("Save To Text File");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        loadButton.setText("Load From Text File");
        loadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadButtonActionPerformed(evt);
            }
        });

        labelSX.setText("Sex");

        labelWL.setText("Work Location");

        employeeType.add(radioButtonPT);
        radioButtonPT.setText("Part-Time");
        radioButtonPT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioButtonPTActionPerformed(evt);
            }
        });

        employeeType.add(radioButtonFT);
        radioButtonFT.setText("Full-Time");
        radioButtonFT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioButtonFTActionPerformed(evt);
            }
        });

        labelDR.setText("Deduction Rate");

        empTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Employee Number", "Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        empTable.setOpaque(false);
        tableScrollPane.setViewportView(empTable);
        empTable.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                int row = empTable.rowAtPoint(evt.getPoint());
                searchEmpInFrame((int)empTable.getValueAt(row, 0));
            }
        });

        empTable.getTableHeader().addMouseListener(new MouseAdapter() {
            int clicked = 0;
            @Override
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                int col = empTable.columnAtPoint(evt.getPoint());
                if (clicked==0){
                    clicked = 1;
                }
                else if (clicked == 1){
                    clicked = 2;
                }
                else{ // if clicked == 2
                    clicked = 1;
                }
                sortTable(col, clicked);
            };
        });

        displayHeading.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        displayHeading.setText("Employees Displayed");

        refreshButton.setText("Refresh");
        refreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshButtonActionPerformed(evt);
            }
        });

        partTimeVSFullTime.setEnabled(false);

        fillerTab.setEnabled(false);

        jLabel2.setText("Please select either Part-Time or Full-Time above");

        javax.swing.GroupLayout fillerTabLayout = new javax.swing.GroupLayout(fillerTab);
        fillerTab.setLayout(fillerTabLayout);
        fillerTabLayout.setHorizontalGroup(
            fillerTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fillerTabLayout.createSequentialGroup()
                .addComponent(jLabel2)
                .addGap(0, 53, Short.MAX_VALUE))
        );
        fillerTabLayout.setVerticalGroup(
            fillerTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fillerTabLayout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(jLabel2)
                .addContainerGap(56, Short.MAX_VALUE))
        );

        partTimeVSFullTime.addTab("", fillerTab);

        labelHW.setText("Hourly Wage");

        labelHPW.setText("Hours Per Week");

        labelWPY.setText("Weeks Per Year");

        javax.swing.GroupLayout partTimeTabLayout = new javax.swing.GroupLayout(partTimeTab);
        partTimeTab.setLayout(partTimeTabLayout);
        partTimeTabLayout.setHorizontalGroup(
            partTimeTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(partTimeTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(partTimeTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelHW, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelHPW, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelWPY, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(partTimeTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addHW, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addWPY, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addHPW, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 34, Short.MAX_VALUE))
        );
        partTimeTabLayout.setVerticalGroup(
            partTimeTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, partTimeTabLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(partTimeTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelHW, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addHW, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(partTimeTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelHPW, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addHPW, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(partTimeTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelWPY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addWPY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        partTimeVSFullTime.addTab("Part-Time", partTimeTab);

        labelYS.setText("Yearly Salary");

        addYS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addYSActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout fullTimeTabLayout = new javax.swing.GroupLayout(fullTimeTab);
        fullTimeTab.setLayout(fullTimeTabLayout);
        fullTimeTabLayout.setHorizontalGroup(
            fullTimeTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fullTimeTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelYS, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(addYS, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(31, Short.MAX_VALUE))
        );
        fullTimeTabLayout.setVerticalGroup(
            fullTimeTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fullTimeTabLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(fullTimeTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(addYS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelYS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(88, Short.MAX_VALUE))
        );

        partTimeVSFullTime.addTab("Full-Time", fullTimeTab);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(SearchButton)
                    .addComponent(searchHeading)
                    .addComponent(searchEN, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(104, 104, 104)
                .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, 408, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(106, 106, 106)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(saveButton, javax.swing.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE)
                            .addComponent(loadButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(217, 217, 217)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(partTimeVSFullTime, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addHeading, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(109, 109, 109)
                                .addComponent(AddEmp))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(484, 484, 484)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(addLN, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(addSX, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(addWL, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(addDR, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(radioButtonPT)
                                        .addGap(67, 67, 67)
                                        .addComponent(radioButtonFT)))
                                .addGap(24, 24, 24))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(addEN, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(addFN, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(32, 32, 32)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(labelLN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(labelFN, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(labelEN, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(labelSX, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(labelWL, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(labelDR, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 205, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(displayHeading, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tableScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(189, 189, 189)
                        .addComponent(refreshButton)))
                .addGap(90, 90, 90))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(title)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(searchHeading)
                            .addComponent(addHeading, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(displayHeading, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(addEN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(labelEN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(addFN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(labelFN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(addLN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(labelLN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(addSX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(labelSX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(addWL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(labelWL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(addDR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(labelDR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(22, 22, 22)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(radioButtonPT)
                                    .addComponent(radioButtonFT))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(partTimeVSFullTime, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(AddEmp))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(tableScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(34, 34, 34)
                                .addComponent(refreshButton))))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(searchEN, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22)
                        .addComponent(SearchButton)
                        .addGap(121, 121, 121)
                        .addComponent(loadButton)
                        .addGap(18, 18, 18)
                        .addComponent(saveButton)))
                .addContainerGap(45, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchENActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchENActionPerformed
        
    }//GEN-LAST:event_searchENActionPerformed

    private void addENActionPerformed(java.awt.event.ActionEvent evt) {                                         
        
    }
    
    private void searchEmpInFrame(int eN){
        EmployeeInfo employeeFound = hashTable.searchEmployee(eN);
        if (employeeFound == null){
            NoEmpFound noEmp = new NoEmpFound(this);
            noEmp.setVisible(true);
        }
        else{
            InquireFrame iFrame = new InquireFrame(employeeFound, hashTable);
            iFrame.setVisible(true);
        }
    }
    
    public boolean isStringInt(String s){
        try {
            Integer.parseInt(s);
            return true;
        } 
        catch (NumberFormatException ex){
            return false;
        }
    }
    
    
    private void SearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchButtonActionPerformed
        String entry = searchEN.getText();
        if (isStringInt(entry) == true){
        searchEmpInFrame(Integer.parseInt(searchEN.getText()));
        searchEN.setText("");
        }
        else {
            InputErrorMsg.setVisible(true);
        }
    }//GEN-LAST:event_SearchButtonActionPerformed

    private void AddEmpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddEmpActionPerformed
        // add functionality for more than just integers
        int eN = Integer.parseInt(addEN.getText());
        String fN = addFN.getText();
        String lN = addLN.getText();
        int sX = Integer.parseInt(addSX.getText());
        int wL = Integer.parseInt(addWL.getText());
        double dR = Double.parseDouble(addDR.getText());
        if (radioButtonPT.isSelected()){
            double hW = Double.parseDouble(addHW.getText());
            int hPW = Integer.parseInt(addHPW.getText());
            int wPY = Integer.parseInt(addWPY.getText());
            hashTable.addEmployee(new PartTimeEmployee(eN, fN, lN, sX, wL, dR, hW, hPW, wPY));
        }
        else if (radioButtonFT.isSelected()){
            double yS = Double.parseDouble(addYS.getText());
            hashTable.addEmployee(new FullTimeEmployee(eN, fN, lN, sX, wL, dR, yS));
        }
        addEN.setText("");
        addFN.setText("");
        addLN.setText("");
        addSX.setText("");
        addWL.setText("");
        addDR.setText("");
        addHW.setText("");
        addHPW.setText("");
        addWPY.setText("");
        addYS.setText("");
        employeeType.clearSelection();
    }//GEN-LAST:event_AddEmpActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        try{
            BufferedWriter out = new BufferedWriter(new FileWriter("saveFile.txt"));
            for (int i=0; i<bucketCount; ++i){
                for (int k=0; k<hashTable.buckets[i].size(); ++k){
                    EmployeeInfo empToWrite = hashTable.buckets[i].get(k);
                    String saveString = "";
                    saveString += Integer.toString(empToWrite.getEmployeeNum()) + ",";
                    saveString += empToWrite.getFirstName() + ",";
                    saveString += empToWrite.getLastName() + ",";
                    saveString += Integer.toString(empToWrite.getSex()) + ",";
                    saveString += Integer.toString(empToWrite.getWorkLocation()) + ",";
                    saveString += Double.toString(empToWrite.getDeductionRate()) + ",";
                    if (empToWrite instanceof PartTimeEmployee){
                        PartTimeEmployee partEmpToWrite = (PartTimeEmployee)empToWrite;
                        saveString += "P,";
                        saveString += Double.toString(partEmpToWrite.getHourlyWage()) + ",";
                        saveString += Integer.toString(partEmpToWrite.getHoursPerWeek()) + ",";
                        saveString += Integer.toString(partEmpToWrite.getWeeksPerYear());
                    }
                    else{ // instance of FullTimeEmployee
                        saveString += "F,";
                        saveString += Double.toString(((FullTimeEmployee)empToWrite).getYearlySalary());
                    }
                    
                    out.write(saveString);
                    out.newLine();
                }
            }
            out.close();
        }
        catch (IOException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_saveButtonActionPerformed

    private void loadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadButtonActionPerformed
        try{
            BufferedReader in = new BufferedReader(new FileReader("saveFile.txt"));
            String eN;
            while((eN = in.readLine()) != null){
                // should i wipe the current hashtable or just add new stuff
                String[] readEmp = eN.split(",");
                int curEN = Integer.parseInt(readEmp[0]);
                String curFN = readEmp[1];
                String curLN = readEmp[2];
                int curSX = Integer.parseInt(readEmp[3]);
                int curWL = Integer.parseInt(readEmp[4]);
                double curDR = Double.parseDouble(readEmp[5]);
                if (readEmp[6].equals("P")){
                    Double curHW = Double.parseDouble(readEmp[7]);
                    int curHPW = Integer.parseInt(readEmp[8]);
                    int curWPY = Integer.parseInt(readEmp[9]);
                    hashTable.addEmployee(new PartTimeEmployee(curEN, curFN, curLN, curSX, curWL, curDR, curHW, curHPW, curWPY));
                }
                else{ // if readEmp[6] = "F" (Full Time Employee)
                    Double curYS = Double.parseDouble(readEmp[7]);
                    hashTable.addEmployee(new FullTimeEmployee(curEN, curFN, curLN, curSX, curWL, curDR, curYS));
                }
            }
        }
        catch(IOException e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_loadButtonActionPerformed

    private void clearTableContents(){
        for (int i=0; i<empTable.getRowCount(); ++i){
            for (int j=0; j<empTable.getColumnCount(); ++j){
                empTable.setValueAt("", i, j);
            }
        }
    }
    
    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
        clearTableContents();
        int row = 0;
        for (int i=0; i<bucketCount; ++i){
            ArrayList<EmployeeInfo> currentAList = hashTable.buckets[i];
            for (int k=0; k<currentAList.size(); ++k){
                empTable.setValueAt(currentAList.get(k).getEmployeeNum(),row,0);
                empTable.setValueAt(currentAList.get(k).getFirstName() + " " + currentAList.get(k).getLastName(), row, 1);
                row++;
            }
        }
    }//GEN-LAST:event_refreshButtonActionPerformed

    private void InputErrorMsgButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InputErrorMsgButtonActionPerformed
            InputErrorMsg.setVisible(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_InputErrorMsgButtonActionPerformed

    private void addYSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addYSActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addYSActionPerformed
    
    private void radioButtonPTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioButtonPTActionPerformed
        // TODO add your handling code here:
        partTimeVSFullTime.setEnabled(true);
        partTimeVSFullTime.setEnabledAt(0, false);
        partTimeVSFullTime.setEnabledAt(1, true);
        partTimeVSFullTime.setEnabledAt(2, false);
        partTimeVSFullTime.setSelectedIndex(1);
    }//GEN-LAST:event_radioButtonPTActionPerformed

    private void radioButtonFTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioButtonFTActionPerformed
        // TODO add your handling code here:
        partTimeVSFullTime.setEnabled(true);
        partTimeVSFullTime.setEnabledAt(0, false);
        partTimeVSFullTime.setEnabledAt(2, true);
        partTimeVSFullTime.setEnabledAt(1, false);
        partTimeVSFullTime.setSelectedIndex(2);
    }//GEN-LAST:event_radioButtonFTActionPerformed
    
    Comparator<Pair<Integer,String>> comp1 = (Pair<Integer,String> a, Pair<Integer,String> b) -> {
        if (a.getKey().equals(b.getKey())){
            return a.getValue().compareTo(b.getValue());
        }
        else{
            return a.getKey().compareTo(b.getKey());
        }
    };
    
    Comparator<Pair<Integer,String>> comp2 = (Pair<Integer,String> a, Pair<Integer,String> b) -> {
        if (a.getValue().equals(b.getValue())){
            return a.getKey().compareTo(b.getKey());
        }
        else{
            return a.getValue().compareTo(b.getValue());
        }
    };

    private void sortTable(int col, int clicked){
        int row = 0;
        ArrayList<Pair<Integer,String>> empsList = new ArrayList<Pair<Integer,String>>();
        while(!String.valueOf(empTable.getValueAt(row,0)).equals("")){
            empsList.add(new Pair(Integer.valueOf(String.valueOf(empTable.getValueAt(row,0))),String.valueOf(empTable.getValueAt(row,1))));
            row++;
        }
        if (col==0){
            Collections.sort(empsList, comp1);
        }
        else{
            Collections.sort(empsList, comp2);
        }
        if (clicked==2){
            Collections.reverse(empsList);
        }
        for (int i=0; i<row; ++i){
            empTable.setValueAt(empsList.get(i).getKey(),i,0);
            empTable.setValueAt(empsList.get(i).getValue(),i,1);
        }
    }
    
//    /**
//     * @param args the command line arguments
//     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(LandingPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(LandingPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(LandingPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(LandingPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new LandingPage().setVisible(true);
//            }
//        });
//    } what does this do

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddEmp;
    private javax.swing.JDialog InputErrorMsg;
    private javax.swing.JButton InputErrorMsgButton;
    private javax.swing.JButton SearchButton;
    private java.awt.TextField addDR;
    private java.awt.TextField addEN;
    private java.awt.TextField addFN;
    private java.awt.TextField addHPW;
    private java.awt.TextField addHW;
    private javax.swing.JLabel addHeading;
    private java.awt.TextField addLN;
    private java.awt.TextField addSX;
    private java.awt.TextField addWL;
    private java.awt.TextField addWPY;
    private java.awt.TextField addYS;
    private javax.swing.JLabel displayHeading;
    private javax.swing.JTable empTable;
    private javax.swing.ButtonGroup employeeType;
    private javax.swing.JPanel fillerTab;
    private javax.swing.JPanel fullTimeTab;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private java.awt.Label labelDR;
    private java.awt.Label labelEN;
    private java.awt.Label labelFN;
    private java.awt.Label labelHPW;
    private java.awt.Label labelHW;
    private java.awt.Label labelLN;
    private java.awt.Label labelSX;
    private java.awt.Label labelWL;
    private java.awt.Label labelWPY;
    private java.awt.Label labelYS;
    private javax.swing.JButton loadButton;
    private javax.swing.JPanel partTimeTab;
    private javax.swing.JTabbedPane partTimeVSFullTime;
    private javax.swing.JRadioButton radioButtonFT;
    private javax.swing.JRadioButton radioButtonPT;
    private javax.swing.JButton refreshButton;
    private javax.swing.JButton saveButton;
    private javax.swing.JTextField searchEN;
    private javax.swing.JLabel searchHeading;
    private javax.swing.JScrollPane tableScrollPane;
    private javax.swing.JLabel title;
    // End of variables declaration//GEN-END:variables
}
