
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/* wassup my man Yinuo Wang


*/

/**
 *
 * @author yinuo
 */

public class LandingPage extends javax.swing.JFrame {
    
    protected MyHashTable hashTable;
    protected int bucketCount;

    /**
     * Creates new form LandingPage
     */
    public LandingPage() {
        bucketCount = 5;
        hashTable = new MyHashTable(5);
        initComponents();
        empTable.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                int row = empTable.rowAtPoint(evt.getPoint());
                searchEmpInFrame((int)empTable.getValueAt(row, 0));
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        employeeType = new javax.swing.ButtonGroup();
        title = new javax.swing.JLabel();
        searchEN = new javax.swing.JTextField();
        searchHeading = new javax.swing.JLabel();
        SearchButton = new javax.swing.JButton();
        addHeading = new javax.swing.JLabel();
        addFN = new java.awt.TextField();
        addLN = new java.awt.TextField();
        addEN = new java.awt.TextField();
        labelEN = new java.awt.Label();
        labelFN = new java.awt.Label();
        labelLN = new java.awt.Label();
        AddEmp = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        loadButton = new javax.swing.JButton();
        addWL = new java.awt.TextField();
        addSX = new java.awt.TextField();
        addDR = new java.awt.TextField();
        labelSX = new java.awt.Label();
        labelWL = new java.awt.Label();
        labelYS = new java.awt.Label();
        radioButtonPT = new javax.swing.JRadioButton();
        radioButtonFT = new javax.swing.JRadioButton();
        addYS = new java.awt.TextField();
        labelDR = new java.awt.Label();
        addHW = new java.awt.TextField();
        addWPY = new java.awt.TextField();
        addHPW = new java.awt.TextField();
        labelHW = new java.awt.Label();
        labelWPY = new java.awt.Label();
        labelHPW = new java.awt.Label();
        tableScrollPane = new javax.swing.JScrollPane();
        empTable = new javax.swing.JTable();
        displayHeading = new javax.swing.JLabel();
        refreshButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        title.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title.setText("Employee Database");

        searchEN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchENActionPerformed(evt);
            }
        });

        searchHeading.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        searchHeading.setText("Search Employee By Number");

        SearchButton.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        SearchButton.setText("Search");
        SearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchButtonActionPerformed(evt);
            }
        });

        addHeading.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        addHeading.setText("Add Employee");

        addEN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addENActionPerformed(evt);
            }
        });

        labelEN.setText("Employee Number");

        labelFN.setText("First Name");

        labelLN.setText("Last Name");

        AddEmp.setText("Add");
        AddEmp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddEmpActionPerformed(evt);
            }
        });

        saveButton.setText("Save To Text File");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        loadButton.setText("Load From Text File");
        loadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadButtonActionPerformed(evt);
            }
        });

        labelSX.setText("Sex");

        labelWL.setText("Work Location");

        labelYS.setText("Yearly Salary");

        employeeType.add(radioButtonPT);
        radioButtonPT.setText("Part-Time");

        employeeType.add(radioButtonFT);
        radioButtonFT.setText("Full-Time");

        labelDR.setText("Deduction Rate");

        labelHW.setText("Hourly Wage");

        labelWPY.setText("Weeks Per Year");

        labelHPW.setText("Hours Per Week");

        empTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Employee Number", "Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tableScrollPane.setViewportView(empTable);

        displayHeading.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        displayHeading.setText("Employees Displayed");

        refreshButton.setText("Refresh");
        refreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(SearchButton)
                    .addComponent(searchHeading)
                    .addComponent(searchEN, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(104, 104, 104)
                .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, 408, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(412, 412, 412)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(addEN, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(addFN, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(addLN, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(addSX, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(addWL, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(addDR, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(24, 24, 24)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(labelLN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(labelFN, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(labelEN, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(addHeading, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelWPY, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(labelHW, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(labelHPW, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(27, 27, 27)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(240, 240, 240)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(labelSX, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(labelWL, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(labelDR, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(radioButtonPT)
                                            .addComponent(addHW, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(addWPY, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(addHPW, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(20, 20, 20)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(radioButtonFT)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(addYS, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(labelYS, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(113, 113, 113)
                                .addComponent(AddEmp))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(73, 73, 73)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(loadButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(28, 28, 28)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(displayHeading, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tableScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(189, 189, 189)
                        .addComponent(refreshButton)))
                .addGap(90, 90, 90))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(title)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(searchHeading)
                            .addComponent(addHeading, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(displayHeading, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(searchEN, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22)
                        .addComponent(SearchButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(addEN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(labelEN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(addFN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(labelFN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(addLN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(labelLN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(addSX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(labelSX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(addWL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(labelWL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(addDR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(labelDR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(19, 19, 19)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(radioButtonPT)
                                    .addComponent(radioButtonFT))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(addYS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(labelYS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(addHW, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(labelHW, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(addHPW, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(addWPY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(labelWPY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(48, 48, 48)
                                        .addComponent(AddEmp))
                                    .addComponent(labelHPW, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(loadButton)
                                .addGap(18, 18, 18)
                                .addComponent(saveButton))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(tableScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(34, 34, 34)
                                .addComponent(refreshButton)))))
                .addContainerGap(45, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchENActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchENActionPerformed
        
    }//GEN-LAST:event_searchENActionPerformed

    private void addENActionPerformed(java.awt.event.ActionEvent evt) {                                         
        
    }
    
    private void searchEmpInFrame(int eN){
        EmployeeInfo employeeFound = hashTable.searchEmployee(eN);
        if (employeeFound == null){
            NoEmpFound noEmp = new NoEmpFound(this);
            noEmp.setVisible(true);
        }
        else{
            InquireFrame iFrame = new InquireFrame(employeeFound, hashTable);
            iFrame.setVisible(true);
        }
    }
    
    private void SearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchButtonActionPerformed
        searchEmpInFrame(Integer.parseInt(searchEN.getText()));
        searchEN.setText("");
    }//GEN-LAST:event_SearchButtonActionPerformed

    private void AddEmpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddEmpActionPerformed
        // add functionality for more than just integers
        int eN = Integer.parseInt(addEN.getText());
        String fN = addFN.getText();
        String lN = addLN.getText();
        int sX = Integer.parseInt(addSX.getText());
        int wL = Integer.parseInt(addWL.getText());
        double dR = Double.parseDouble(addDR.getText());
        if (radioButtonPT.isSelected()){
            double hW = Double.parseDouble(addHW.getText());
            int hPW = Integer.parseInt(addHPW.getText());
            int wPY = Integer.parseInt(addWPY.getText());
            hashTable.addEmployee(new PartTimeEmployee(eN, fN, lN, sX, wL, dR, hW, hPW, wPY));
        }
        else if (radioButtonFT.isSelected()){
            double yS = Double.parseDouble(addYS.getText());
            hashTable.addEmployee(new FullTimeEmployee(eN, fN, lN, sX, wL, dR, yS));
        }
        addEN.setText("");
        addFN.setText("");
        addLN.setText("");
        addSX.setText("");
        addWL.setText("");
        addDR.setText("");
        addHW.setText("");
        addHPW.setText("");
        addWPY.setText("");
        addYS.setText("");
        employeeType.clearSelection();
    }//GEN-LAST:event_AddEmpActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        try{
            BufferedWriter out = new BufferedWriter(new FileWriter("saveFile.txt"));
            for (int i=0; i<bucketCount; ++i){
                for (int k=0; k<hashTable.buckets[i].size(); ++k){
                    EmployeeInfo empToWrite = hashTable.buckets[i].get(k);
                    String saveString = "";
                    saveString += Integer.toString(empToWrite.getEmployeeNum()) + ",";
                    saveString += empToWrite.getFirstName() + ",";
                    saveString += empToWrite.getLastName() + ",";
                    saveString += Integer.toString(empToWrite.getSex()) + ",";
                    saveString += Integer.toString(empToWrite.getWorkLocation()) + ",";
                    saveString += Double.toString(empToWrite.getDeductionRate()) + ",";
                    if (empToWrite instanceof PartTimeEmployee){
                        PartTimeEmployee partEmpToWrite = (PartTimeEmployee)empToWrite;
                        saveString += "P,";
                        saveString += Double.toString(partEmpToWrite.getHourlyWage()) + ",";
                        saveString += Integer.toString(partEmpToWrite.getHoursPerWeek()) + ",";
                        saveString += Integer.toString(partEmpToWrite.getWeeksPerYear());
                    }
                    else{ // instance of FullTimeEmployee
                        saveString += "F,";
                        saveString += Double.toString(((FullTimeEmployee)empToWrite).getYearlySalary());
                    }
                    
                    out.write(saveString);
                    out.newLine();
                }
            }
            out.close();
        }
        catch (IOException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_saveButtonActionPerformed

    private void loadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadButtonActionPerformed
        try{
            BufferedReader in = new BufferedReader(new FileReader("save.txt"));
            String eN;
            while((eN = in.readLine()) != null){
                // should i wipe the current hashtable or just add new stuff
                String[] readEmp = eN.split(",");
                int curEN = Integer.parseInt(readEmp[0]);
                String curFN = readEmp[1];
                String curLN = readEmp[2];
                int curSX = Integer.parseInt(readEmp[3]);
                int curWL = Integer.parseInt(readEmp[4]);
                double curDR = Double.parseDouble(readEmp[5]);
                if (readEmp[6]=="P"){
                    Double curHW = Double.parseDouble(readEmp[7]);
                    int curHPW = Integer.parseInt(readEmp[8]);
                    int curWPY = Integer.parseInt(readEmp[9]);
                    hashTable.addEmployee(new PartTimeEmployee(curEN, curFN, curLN, curSX, curWL, curDR, curHW, curHPW, curWPY));
                }
                else{ // if readEmp[6] = "F" (Full Time Employee)
                    Double curYS = Double.parseDouble(readEmp[7]);
                    hashTable.addEmployee(new FullTimeEmployee(curEN, curFN, curLN, curSX, curWL, curDR, curYS));
                }
            }
        }
        catch(IOException e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_loadButtonActionPerformed

    private void clearTableContents(){
        for (int i=0; i<empTable.getRowCount(); ++i){
            for (int j=0; j<empTable.getColumnCount(); ++j){
                empTable.setValueAt("", i, j);
            }
        }
    }
    
    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
        clearTableContents();
        int row = 0;
        for (int i=0; i<bucketCount; ++i){
            ArrayList<EmployeeInfo> currentAList = hashTable.buckets[i];
            for (int k=0; k<currentAList.size(); ++k){
                empTable.setValueAt(currentAList.get(k).getEmployeeNum(),row,0);
                empTable.setValueAt(currentAList.get(k).getFirstName() + " " + currentAList.get(k).getLastName(), row, 1);
                row++;
            }
        }
    }//GEN-LAST:event_refreshButtonActionPerformed

//    /**
//     * @param args the command line arguments
//     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(LandingPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(LandingPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(LandingPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(LandingPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new LandingPage().setVisible(true);
//            }
//        });
//    } what does this do

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddEmp;
    private javax.swing.JButton SearchButton;
    private java.awt.TextField addDR;
    private java.awt.TextField addEN;
    private java.awt.TextField addFN;
    private java.awt.TextField addHPW;
    private java.awt.TextField addHW;
    private javax.swing.JLabel addHeading;
    private java.awt.TextField addLN;
    private java.awt.TextField addSX;
    private java.awt.TextField addWL;
    private java.awt.TextField addWPY;
    private java.awt.TextField addYS;
    private javax.swing.JLabel displayHeading;
    private javax.swing.JTable empTable;
    private javax.swing.ButtonGroup employeeType;
    private java.awt.Label labelDR;
    private java.awt.Label labelEN;
    private java.awt.Label labelFN;
    private java.awt.Label labelHPW;
    private java.awt.Label labelHW;
    private java.awt.Label labelLN;
    private java.awt.Label labelSX;
    private java.awt.Label labelWL;
    private java.awt.Label labelWPY;
    private java.awt.Label labelYS;
    private javax.swing.JButton loadButton;
    private javax.swing.JRadioButton radioButtonFT;
    private javax.swing.JRadioButton radioButtonPT;
    private javax.swing.JButton refreshButton;
    private javax.swing.JButton saveButton;
    private javax.swing.JTextField searchEN;
    private javax.swing.JLabel searchHeading;
    private javax.swing.JScrollPane tableScrollPane;
    private javax.swing.JLabel title;
    // End of variables declaration//GEN-END:variables
}
